[build-system]
requires = ['setuptools', 'setuptools_scm']
build-backend = 'setuptools.build_meta'

[project]
name = "cr2"
version = "0.0.0"
description = "CR2"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Philipp Weiler"},
    {name = "Marius Lange"},
    {name = "Michal Klein"},
]
maintainers = [
    {name = "Philipp Weiler", email = "philipp.weiler@tum.de"},
]
urls.Documentation = "https://todo.com"  # TODO
urls.Source = "https://github.com/theislab/cellrank2_reproducibility.git"
urls.Home-page = "https://github.com/theislab/cellrank2_reproducibility.git"
dependencies = [
    "cellrank"
]

[project.optional-dependencies]
dev = [
    "pre-commit",
]

[tool.black]
line-length = 120
include = '\.pyi?$|\.ipynb?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
use_parentheses = true
known_num = "networkx,numpy,pandas,scipy,sklearn,statmodels"
known_plot = "matplotlib,mplscience,mpl_toolkits,seaborn"
known_bio = "anndata,cellrank,scvelo"
sections = "FUTURE,STDLIB,THIRDPARTY,NUM,PLOT,BIO,FIRSTPARTY,LOCALFOLDER"
no_lines_before = "LOCALFOLDER"
balanced_wrapping = true
length_sort = "0"
indent = "    "
float_to_top = true
order_by_type = false

[tool.ruff]
src = ["."]
line-length = 119
target-version = "py38"
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
    # Missing argument description in the docstring TODO: enable
    "D417",
    # Unable to detect undefined names
    "F403",
    # Underfined, or defined from star imports: module
    "F405",
    # Within an except clause, raise exceptions with `raise ... from err`
    "B904",
]

[tool.jupytext]
notebook_metadata_filter = "-all,-jupytext.text_representation"
cell_metadata_filter = "-all"

[tool.jupytext.formats]
"notebooks/" = "ipynb"
"scripts/" = "py:percent"
